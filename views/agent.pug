doctype html 
html 
    head 
        title Agent Code - Imagine Dungeons 
        link(rel="stylesheet" href="/static/css/agent_style.css")
        link(rel="stylesheet" href="/static/css/style.css")
        link(rel="stylesheet" href="/static/css/introjs.css")
        link(rel="icon" type="image/x-icon" href="/static/images/favicon.ico")
        script(src="https://kit.fontawesome.com/534e6fef90.js" crossorigin="anonymous")

        link(rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.11.0/css/all.css")
        
        link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.57.0/codemirror.min.css")
        link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.57.0/theme/darcula.css")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.57.0/codemirror.min.js")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.57.0/mode/javascript/javascript.min.js")

        script(src="https://cdn.jsdelivr.net/npm/chart.js")
    body 
        include includes/nav
        span(hidden)#ready
        .agent(id_agent=agent._id)
            button(onclick="startIntro()").intro
                i.far.fa-question-circle
            .code.box
                .header
                    div(style="display: inline;")
                        input(type="text" id="agent_name" name="agent_name" value=agent.name placeholder="Agent Name") 
                        | .js
                    div(style="display: flex; align-items: center;")
                        button#undo
                            i.fas.fa-trash-undo
                        button#save
                            i.fas.fa-save
                        button#files
                            i.fas.fa-chevron-down
                        
                .code_textarea
                    ul.algo_options(hidden)
                        .division Your Files
                        li.algo_option(code="main")#main
                        .division Examples
                        li.algo_option(code="dqn") DQN Agent
                        li.algo_option(code="placeholder") Q-learning 

                    textarea(id="code")=agent.code

            .right
                .choice
                    label(for="game_name") Choose a game
                    br
                    select(name="game_name" id="game_name")
                        if games
                            each game in games 
                                option(value=game._id selected=(game._id == id_game) ? true : false)=game.name
                    button#run
                        | RUN CODE &nbsp;
                        i.fas.fa-play 

                .top
                    .game.box 
                        .header LIVE PLAY
                        .cont_container
                            .canva_container
                                canvas#playCanvas
                    .render.box 
                        .header RENDER 
                        .render_container
                            canvas#renderCanvas

                .bottom
                    .plot.box
                        .header PLOT
                        .plot_container 
                            canvas#myChart

                    .metrics.box
                        .header METRICS 
                        .metrics_container 
                            .metric
                                .metric_cont
                                    i.metric_icon.fad.fa-clock
                                    div
                                        .metric_title Time
                                        .metric_value#time
                                    
                            .metric 
                                .metric_cont
                                    i.metric_icon.fad.fa-heartbeat
                                    div
                                        .metric_title Life
                                        .metric_value#life

                            .metric 
                                .metric_cont
                                    i.metric_icon.fad.fa-star
                                    div
                                        .metric_title XP
                                        .metric_value#xp

                            .metric 
                                .metric_cont
                                    i.metric_icon.fad.fa-medal
                                    div
                                        .metric_title Level
                                        .metric_value#level

                            .metric 
                                .metric_cont
                                    i.metric_icon.fad.fa-sword
                                    div
                                        .metric_title Attack
                                        .metric_value#attack

                            .metric 
                                .metric_cont
                                    i.metric_icon.fad.fa-shield
                                    div
                                        .metric_title Defense
                                        .metric_value#defense

                            .metric 
                                .metric_cont
                                    i.metric_icon.fad.fa-keyboard
                                    div
                                        .metric_title Key Pressed
                                        .metric_value#key
    script.
        window.codes = !{JSON.stringify(codes)}

        window.editor = CodeMirror.fromTextArea(document.getElementById("code"), {
            mode: "javascript",
            lineNumbers: true,
            theme: 'darcula',
            autocorrect: true,
            indentUnit: 2
        });

    script(src="/static/bundles/agent_client_bundle.js")
    script(src="/static/js/intro.js")
    script. 
        function setSizeCanvas(){
            var canvas = document.getElementById("playCanvas")
            var width = canvas.parentNode.parentNode.clientWidth

            var unit = Math.round(width/4);

            canvas.parentNode.style.height = unit*3 + "px"

            var render_canvas = document.getElementById("renderCanvas")
            render_canvas.style.height = canvas.parentNode.style.height
        }

        setSizeCanvas()

        window.addEventListener('resize', () =>
        {
            setSizeCanvas()
        })

        const ctx = document.getElementById('myChart').getContext('2d');

        const data = {
        labels: [],
        datasets: [{
            label: 'Rewards per Episode',
            data: [],
            backgroundColor: 'rgba(177, 83, 40, 0.2)',
            borderColor: 'rgba(177, 83, 40, 1)',
            borderWidth: 1
        }]
        };

        const options = {
            maintainAspectRatio: false,
            responsive: true,  
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Episode #'
                    },
                    ticks: {
                        autoSkip: true,
                        maxTicksLimit: 10
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Cumulative Reward'
                    },
                    ticks: {
                        beginAtZero: true
                    }
                }
            }
        };

        window.chart = new Chart(ctx, {
            type: 'line',
            data: data,
            options: options
        });

        function startIntro(){
            if (document.getElementsByClassName("choice")[0].style.display == "none"){
                training();
            }
            else {
                coding();
            }
        }

        function coding(){
            introJs().setOptions({
                showProgress: true,
                exitOnOverlayClick: true,
                steps: [
                { 
                    title: "Welcome",
                    intro: "Welcome to the Agent page! With an easy-to-use code editor, you can write your agent code from scratch or modify an existing one to make it more efficient and effective. But that's not all! Here you can see your agent in action, playing the game you have created."
                },
                {
                    element: '#agent_name',
                    title: "Agent Name",
                    intro: "This input field allows you to change your agent's name to something you desire and is used to identify your agent in the platform.",
                    position: 'bottom'
                },
                {
                    element: '.code_textarea',
                    title: "Editor",
                    intro: "This code editor allows you to write JavaScript code to train your agent using pre-loaded libraries. Here you can easily create complex algorithms and logic to help your customized agent navigate the game environment easily.",
                    position: 'right'
                },
                {
                    element: '#undo',
                    title: "Undo",
                    intro: "This button lets you quickly revert any changes you've made to your code and return to the last saved version of your code. However, it's important to note that once you've clicked, you cannot go back to the changes you had previously made.",
                    position: 'bottom'
                },
                {
                    element: '#save',
                    title: "Save",
                    intro: "This button lets you save your current code directly to your main file. It ensures that all your progress and changes are safely stored and can be accessed anytime.",
                    position: 'bottom'
                },
                {
                    element: '#files',
                    title: "Code Examples",
                    intro: "The code editor has access to various example files, showcasing different strategies for using reinforcement learning to train game-playing agents. These examples can be beneficial if you seek inspiration and guidance on creating effective game-playing agents. Each example is thoroughly documented and explained, making it easy to understand and adapt the underlying logic to your needs.",
                    position: 'bottom'
                },
                {
                    element: '#game_name',
                    title: "Choose a game",
                    intro: "You can select the game you want to train your agent from the options provided. The list includes all the games that you have created on the platform.",
                    position: 'left'
                },
                {
                    element: '#run',
                    title: "Train your agent",
                    intro: "This button initiates the training process and applies your code to the game environment, allowing your agent to learn and improve its performance over time.",
                    position: 'left'
                }
                
                ]
            }).start()
        }

        function training(){
            introJs().setOptions({
                showProgress: true,
                exitOnOverlayClick: true,
                steps: [
                {
                    element: '.code_textarea',
                    title: "Editor is read-only",
                    intro: "While the agent is training, the editor is set to read-only mode, and no changes will be possible. If you want to change the code, please reload the page to start fresh with your code.",
                    position: 'right'
                },
                {
                    element: '.game',
                    title: "Live play",
                    intro: "This tab displays the game your agent is playing in real-time, allowing you to observe your agent's behavior and see how it responds to different game scenarios.",
                    position: 'left'
                },
                {
                    element: '.render',
                    title: "Render",
                    intro: "This tab renders a black-and-white image showing the current game state sent by the game environment to train your agent. You can observe how your agent processes this information by monitoring the state observation in real time.",
                    position: 'left'
                },
                {
                    element: '.plot',
                    title: "Rewards Plot",
                    intro: "This tab shows the cumulative reward received by your agent as it learns to play a game, allowing you to monitor the agent's progress and observe its improvement over time. The plot refreshes with real-time information every time the game resets.",
                    position: 'top'
                },
                {
                    element: '.metrics',
                    title: "Metrics",
                    intro: "This tab displays the current game metrics as your agent plays the game.  The metrics tab includes a range of information about the game environment, such as the player's life, current level, XP, and time elapsed.",
                    position: 'top'
                }
                
                ]
            }).start()
        }